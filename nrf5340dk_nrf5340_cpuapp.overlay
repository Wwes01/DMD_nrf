// To get started, press Ctrl+Space to bring up the completion menu and view the available nodes.

// You can also use the buttons in the sidebar to perform actions on nodes.
// Actions currently available include:

// * Enabling / disabling the node
// * Adding the bus to a bus
// * Removing the node
// * Connecting ADC channels

// For more help, browse the DeviceTree documentation at https://docs.zephyrproject.org/latest/guides/dts/index.html
// You can also visit the nRF DeviceTree extension documentation at https://nrfconnect.github.io/vscode-nrf-connect/devicetree/nrfdevicetree.html


&uart0 {
    status = "okay";
};

&uart1 {
    status = "disabled";
};


&pinctrl {
    spis1_default: spis1_default {
        group1 {
            psels = <NRF_PSEL(SPIS_SCK, 0, 25)>,
                <NRF_PSEL(SPIS_MISO, 0, 12)>;
        };
    };

    spi_master_default: spi_master_default {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK, 0, 8)>,
                <NRF_PSEL(SPIM_MOSI, 0, 9)>;
        };
    };
};

&spi1 {
    status = "okay";
    compatible = "nordic,nrf-spis";
    pinctrl-0 = <&spis1_default>;
    def-char = <0x00>;
};

&spi4 {
    status = "okay";
    compatible = "nordic,nrf-spim";
    pinctrl-0 = <&spi_master_default>;
};

&i2c1 {
    status = "disabled";
};

&comp {
    compatible = "nordic,nrf-lpcomp";
    status = "okay";
};

// User Interface:
&zephyr_udc0 {
	cdc_acm_uart0 {
		compatible = "zephyr,cdc-acm-uart";
	};
};

&power {
    status = "disabled";
};

&gpiote1 {
    status = "okay";
};

/ {
    aliases {
            led0 = &myled0;
    };

    leds {
            compatible = "gpio-leds";
            myled0: led_0 {
                    gpios = <&gpio1 7 GPIO_ACTIVE_LOW>;
            };
    };
};
&led1 {
    gpios = <&gpio0 0 (GPIO_ACTIVE_LOW | (1 << 8))>;
};

&led2 {
    gpios = <&gpio0 2 GPIO_ACTIVE_LOW>;
};
